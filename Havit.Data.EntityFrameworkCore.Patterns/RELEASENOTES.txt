v2.9.32 (??.4.2025)
• SoftDeleteManager může být (opět) registrován s lifetime Scoped.
• Opravy pádů při použití navigace Many-To-Many.

v2.9.30 (25.2.2025)
• Podpora non-int primárních klíčů (podporovány jsou SByte, Int16, Int32, Int64 a unsigned varianty, Guid, string)
• Náhrada IRepository<TEntity> ve prospěch IRepository<TEntity, TKey> a související úpravy

v2.9.5 (19.12.2024)
• Vypnutí cachování nyní funguje

v2.9.4 (9.12.2024)
• DbUnitOfWork - Podpora registrace asynchronních after commit akcí (použitelné jen v CommmitAsync)
• ComponentRegistrationOptions - oprava (ne)možnosti vytvoření instance

v2.9.3 (4.12.2024)
• Odstranění výchozí implementace v IBeforeCommitProcessor<>, doplnění bázové třídy BeforeCommitProcessor.

v2.9.2 (20.11.2024)
• Uvolnění příliš omezující podmínky v QueryBase

v2.9.0 (12.11.2024)
• Aktualizace na EF Core 9

Novinky, úpravy:
• IUnitOfWork.Clear() pro vyčištění change trackeru (a samotného unit of worku)
• DbUnitOfWork.Commit[Async] - omezeno snížení volání detekce změn ze 3 na 1 (občas na 2)
• DbUnitOfWork PerformAddForInsert/Update/Delete - přibylo přetížení pro 1 entitu a stávající pole změněno na IEnumeable<>, breaking changes pro ty, kteří mají vlastní DbUnitOfWork s přetíženými metodami [BREAKING CHANGE]
• BeforeCommitProcessory nyní vrací informaci o tom, zda provedl úpravu s dopadem na change tracker [BREAKING CHANGE]
• BeforeCommitProcessory - podpora pro async variantu (lze použít jen v asynchronním commitu!)
• Seedování dat nyní používá UnitOfWork, neobchází tak (čištění) cache, používá before commit processory, atp.
• Seedování dat nyní izoluje jednotlivé seedy pomocí IUnitOfWork.Clear()
• Seedování má možnost nově použít SeedAsync (nutné pro fungování asynchronních before commit procesorů)
• DbDataLoader, DbDataSeedPersister - lepší identifikace zdroje SQL dotazu pomocí TagWith
• Změna registrace do DI containeru (viz níže) [BREAKING CHANGE]
• Odstranění obsolete memberů [BREAKING CHANGE]
• Spousta optimalizací alokací paměti a výkonu

Dependency Injection [BREAKING CHANGE]
• Odstranění IEntityPatternInstaller, WithEntityPatternsInstaller, použito jen IServiceCollection
• Registrace DbContextu pomocí prostředků samotného EF Core
• AddEntityPatterns - zrušen
• AddDataLayer - metoda nahrazena generovanou metodou AddDayaLayerServices
• AddDataLayer/AddDayaLayerServices nově neregistruje data seedy a potřebuje explicitní registraci
• ComponentRegistrationOptions již nemá DbUnitOfWorkType (vlastní unit of work lze zaregistrovat samostatně)

Optimalizace:
• DbUnitOfWork.Commit[Async] - optimalizace alokací paměti a využití reflexe v BeforeCommitProcessorech+EntityValidators
• Dictionary nahrazen FrozenDictionary, sestavení při startu aplikace, atp.
• DbDataLoader - optimalizace iterací polí, alokací paměti, předávání dat do následujícího ThenLoad
