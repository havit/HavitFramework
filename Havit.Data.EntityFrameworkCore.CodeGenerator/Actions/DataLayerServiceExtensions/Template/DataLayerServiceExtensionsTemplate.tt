<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Havit.Data.EntityFrameworkCore.CodeGenerator.Actions.DataEntries.Model" #>
<#@ import namespace="Havit.Data.EntityFrameworkCore.CodeGenerator.Actions.DataSources.Model" #>
<#@ include file="..\..\AutoGenerated.tt"#>

using Havit.Data.Patterns.DataSources;
using Microsoft.Extensions.DependencyInjection;

namespace <#= Model.NamespaceName #>;

[System.CodeDom.Compiler.GeneratedCode("Havit.Data.EntityFrameworkCore.CodeGenerator", "1.0")]
public static class DataLayerServiceExtensions
{
	public static IServiceCollection AddDataLayerServices(this IServiceCollection services)
	{
		// services.AddDataLayerCoreServices();
	
		AddDataSources(services);
		AddRepositories(services);

		return services;
	}

	private static void AddDataSources(IServiceCollection services)
	{
<# foreach (DbDataSourceModel dataSourceModel in Model.DataSourceModels) { #>
		//services.AddServices(new Type[] { typeof(<#= dataSourceModel.NamespaceName #>.<#= dataSourceModel.InterfaceDataSourceFullName #>), typeof(IDataSource<<#= dataSourceModel.ModelClassFullName#>>) }, typeof(<#= dataSourceModel.NamespaceName #>.<#= dataSourceModel.DbDataSourceClassName #>), ServiceLifetime.Transient);
<# } #>
	}

	private static void AddRepositories(IServiceCollection services)
	{
	}
}
