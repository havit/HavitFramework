<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
	</PropertyGroup>

	<ItemGroup>
		<InternalsVisibleTo Include="Havit.Data.EntityFrameworkCore.Tests" />
		<InternalsVisibleTo Include="BenchmarkApp" />
	</ItemGroup>

	<!-- NuGet -->
	<Import Project="../NuGet.targets" />
	<PropertyGroup>
		<PackageVersion>2.9.33</PackageVersion>
		<Description>HAVIT .NET Framework Extensions - Entity Framework Core Extensions</Description>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="ConfigureAwaitChecker.Analyzer" Version="5.0.0.1" PrivateAssets="all" />
		<!-- Chceme přinést verzi, která obsahuje workaround k issue
			 Reading large data (binary, text) asynchronously is extremely slow #593 (https://github.com/dotnet/SqlClient/issues/593).
			 Issue popisuje např. https://www.youtube.com/watch?v=7iuUh0BIAuE, dopady workardoundu od 25:00 dále.
		-->
		<PackageReference Include="Microsoft.Data.SqlClient" Version="5.2.2" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="[9.0.0,10)" />
		<PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers" Version="17.13.61">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Havit.Core\Havit.Core.csproj" />
		<ProjectReference Include="..\Havit.Data.EntityFrameworkCore.Abstractions\Havit.Data.EntityFrameworkCore.Abstractions.csproj" />
		<ProjectReference Include="..\Havit.Model\Havit.Model.csproj" />
	</ItemGroup>

</Project>
