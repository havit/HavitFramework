<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="..\..\AutoGenerated.tt"#>

using Havit.Data.EntityFrameworkCore;
using Havit.Data.EntityFrameworkCore.Patterns.Caching;
using Havit.Data.EntityFrameworkCore.Patterns.Repositories;
using Havit.Data.EntityFrameworkCore.Patterns.SoftDeletes;
using Havit.Data.Patterns.DataEntries;
using Havit.Data.Patterns.DataLoaders;
using Havit.Data.Patterns.Infrastructure;

namespace <#= Model.NamespaceName #>;

[System.CodeDom.Compiler.GeneratedCode("Havit.Data.EntityFrameworkCore.CodeGenerator", "1.0")]
public partial class <#= Model.DbRepositoryName #> : <#= Model.DbRepositoryBaseName #>, <#= Model.InterfaceRepositoryName #>
{
	public <#= Model.DbRepositoryName #>(IDbContext dbContext, IEntityKeyAccessor<<#= Model.ModelClassFullName #>, <#= Model.ModelClassPrimaryKeyTypeName #>> entityKeyAccessor, IDataLoader dataLoader, ISoftDeleteManager softDeleteManager, IEntityCacheManager entityCacheManager, IRepositoryQueryProvider<<#= Model.ModelClassFullName #>, <#= Model.ModelClassPrimaryKeyTypeName #>> repositoryQueryProvider)
		: base(dbContext, entityKeyAccessor, dataLoader, softDeleteManager, entityCacheManager, repositoryQueryProvider)
	{
	}
}