<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Havit.Data.EntityFrameworkCore.CodeGenerator.Actions.DataEntries.Model" #>
<#@ include file="..\..\AutoGenerated.tt"#>

namespace <#= Model.NamespaceName #>;

[System.CodeDom.Compiler.GeneratedCode("Havit.Data.EntityFrameworkCore.CodeGenerator", "1.0")]
public class <#= Model.DbClassName #> : Havit.Data.Patterns.DataEntries.DataEntries<<#= Model.ModelClassFullName #>, <#= Model.ModelClassPrimaryKeyTypeName #>>, <#= Model.InterfaceName #>
{
<# foreach (DataEntriesModel.Entry entry in Model.Entries) { #>
	private <#= Model.ModelClassFullName #> <#= entry.FieldName #>;
<# } #>

<# foreach (DataEntriesModel.Entry entry in Model.Entries) { #>
<# if (entry.IsObsolete) { #>#pragma warning disable 0618
<# if (String.IsNullOrEmpty(entry.ObsoleteMessage)) { #>
    [Obsolete]
<# } else { #>
    [Obsolete("<#= entry.ObsoleteMessage.Replace("\"", "\\\"") #>")]
<# } #>
<# } #>
	public <#= Model.ModelClassFullName #> <#= entry.PropertyName #> => <#= entry.FieldName #> ??= GetEntry(<#= Model.ModelEntriesEnumerationFullName #>.<#= entry.PropertyName #>);
<# if (entry.IsObsolete) { #>
#pragma warning restore 0618
<# } #>
<# } #>

<# if (Model.UseDataEntrySymbolStorage) { #>
	public <#= Model.DbClassName #>(Havit.Data.Patterns.DataEntries.IDataEntrySymbolService<<#= Model.ModelClassFullName #>, <#= Model.ModelClassPrimaryKeyTypeName #>> dataEntrySymbolService, <#= Model.RepositoryDependencyFullName #> repository)
		: base(dataEntrySymbolService, repository)
<# } else { #>
	public <#= Model.DbClassName #>(<#= Model.RepositoryDependencyFullName #> repository)
		: base(repository)
<# } #>
	{
	}
}
