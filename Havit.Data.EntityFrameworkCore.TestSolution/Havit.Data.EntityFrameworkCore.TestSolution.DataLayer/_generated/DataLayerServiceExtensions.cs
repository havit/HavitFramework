//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Havit.Data.EntityFrameworkCore.Patterns.DependencyInjection;
using Havit.Data.EntityFrameworkCore.Patterns.Infrastructure;
using Havit.Data.EntityFrameworkCore.Patterns.Repositories;
using Havit.Data.Patterns.DataEntries;
using Havit.Data.Patterns.DataSources;
using Havit.Data.Patterns.Infrastructure;
using Havit.Data.Patterns.Repositories;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.DependencyInjection.Extensions;

namespace Havit.Data.EntityFrameworkCore.TestSolution.DataLayer;

[System.CodeDom.Compiler.GeneratedCode("Havit.Data.EntityFrameworkCore.CodeGenerator", "1.0")]
public static partial class DataLayerServiceExtensions
{
	public static IServiceCollection AddDataLayerServices(this IServiceCollection services, ComponentRegistrationOptions options = null)
	{
		services.AddDataLayerCoreServices(options);
	
		AddDataSources(services);
		AddRepositories(services);
		AddDataEntries(services);
		AddEntityKeyAccessors(services);

		return services;
	}

	private static void AddDataSources(IServiceCollection services)
	{
		services.TryAddTransient<Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.DataSources.Common.ILanguageDataSource, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.DataSources.Common.LanguageDbDataSource>();
		services.TryAddTransient<IDataSource<Havit.Data.EntityFrameworkCore.TestSolution.Model.Common.Language>, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.DataSources.Common.LanguageDbDataSource>();

		services.TryAddTransient<Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.DataSources.IRoleDataSource, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.DataSources.RoleDbDataSource>();
		services.TryAddTransient<IDataSource<Havit.Data.EntityFrameworkCore.TestSolution.Model.Role>, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.DataSources.RoleDbDataSource>();

		services.TryAddTransient<Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.DataSources.IUserDataSource, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.DataSources.UserDbDataSource>();
		services.TryAddTransient<IDataSource<Havit.Data.EntityFrameworkCore.TestSolution.Model.User>, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.DataSources.UserDbDataSource>();

	}

	private static void AddRepositories(IServiceCollection services)
	{
		services.TryAddScoped<Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.Common.ILanguageRepository, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.Common.LanguageDbRepository>();
		services.TryAddScoped<IRepository<Havit.Data.EntityFrameworkCore.TestSolution.Model.Common.Language, System.Int32>>(sp => sp.GetRequiredService<Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.Common.ILanguageRepository>());
		services.TryAddSingleton<IRepositoryQueryProvider<Havit.Data.EntityFrameworkCore.TestSolution.Model.Common.Language, System.Int32>, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.Common.LanguageDbRepositoryQueryProvider>();

		services.TryAddScoped<Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.IRoleRepository, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.RoleDbRepository>();
		services.TryAddScoped<IRepository<Havit.Data.EntityFrameworkCore.TestSolution.Model.Role, System.Int32>>(sp => sp.GetRequiredService<Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.IRoleRepository>());
		services.TryAddSingleton<IRepositoryQueryProvider<Havit.Data.EntityFrameworkCore.TestSolution.Model.Role, System.Int32>, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.RoleDbRepositoryQueryProvider>();

		services.TryAddScoped<Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.IUserRepository, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.UserDbRepository>();
		services.TryAddScoped<IRepository<Havit.Data.EntityFrameworkCore.TestSolution.Model.User, System.Int32>>(sp => sp.GetRequiredService<Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.IUserRepository>());
		services.TryAddSingleton<IRepositoryQueryProvider<Havit.Data.EntityFrameworkCore.TestSolution.Model.User, System.Int32>, Havit.Data.EntityFrameworkCore.TestSolution.DataLayer.Repositories.UserDbRepositoryQueryProvider>();

	}

	private static void AddDataEntries(IServiceCollection services)
	{
	}

	private static void AddEntityKeyAccessors(IServiceCollection services)
	{
		services.TryAddTransient<IEntityKeyAccessor<Havit.Data.EntityFrameworkCore.TestSolution.Model.Common.Language, System.Int32>, DbEntityKeyAccessor<Havit.Data.EntityFrameworkCore.TestSolution.Model.Common.Language, System.Int32>>();
		services.TryAddTransient<IEntityKeyAccessor<Havit.Data.EntityFrameworkCore.TestSolution.Model.Role, System.Int32>, DbEntityKeyAccessor<Havit.Data.EntityFrameworkCore.TestSolution.Model.Role, System.Int32>>();
		services.TryAddTransient<IEntityKeyAccessor<Havit.Data.EntityFrameworkCore.TestSolution.Model.User, System.Int32>, DbEntityKeyAccessor<Havit.Data.EntityFrameworkCore.TestSolution.Model.User, System.Int32>>();
	}
}
